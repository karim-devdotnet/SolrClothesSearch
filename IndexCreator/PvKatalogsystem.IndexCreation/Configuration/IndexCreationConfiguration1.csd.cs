//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.269
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PvKatalogsystem.IndexCreation.Configuration
{
    
    
    /// <summary>
    /// The IndexCreationConfig Configuration Section.
    /// </summary>
    public partial class IndexCreationConfig : global::System.Configuration.ConfigurationSection
    {
        
        /// <summary>
        /// Verhindert Probleme mit eventuell angegebenen Namespaces und SchemaLocations an der Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool OnDeserializeUnrecognizedAttribute(string name, string value)
        {
            if (((name == "xmlns:xsi") 
                        || (name == "xsi:schemaLocation")))
            {
                return true;
            }
            return base.OnDeserializeUnrecognizedAttribute(name, value);
        }
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the IndexCreationConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string IndexCreationConfigSectionName = "indexCreationConfig";
        
        /// <summary>
        /// Gets the IndexCreationConfig instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public static global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig Instance
        {
            get
            {
                return ((global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig)(global::System.Configuration.ConfigurationManager.GetSection(global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.IndexCreationConfigSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region MasterServer Property
        /// <summary>
        /// The XML name of the <see cref="MasterServer"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string MasterServerPropertyName = "masterServer";
        
        /// <summary>
        /// Gets or sets the MasterServer.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The MasterServer.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.MasterServerPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::PvKatalogsystem.IndexCreation.Configuration.MasterServerConfig MasterServer
        {
            get
            {
                return ((global::PvKatalogsystem.IndexCreation.Configuration.MasterServerConfig)(base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.MasterServerPropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.MasterServerPropertyName] = value;
            }
        }
        #endregion
        
        #region ReplicationServer Property
        /// <summary>
        /// The XML name of the <see cref="ReplicationServer"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ReplicationServerPropertyName = "replicationServer";
        
        /// <summary>
        /// Gets or sets the ReplicationServer.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ReplicationServer.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.ReplicationServerPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerCollection ReplicationServer
        {
            get
            {
                return ((global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerCollection)(base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.ReplicationServerPropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.ReplicationServerPropertyName] = value;
            }
        }
        #endregion
        
        #region Indices Property
        /// <summary>
        /// The XML name of the <see cref="Indices"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string IndicesPropertyName = "indices";
        
        /// <summary>
        /// Gets or sets the Indices.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Indices.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.IndicesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::PvKatalogsystem.IndexCreation.Configuration.IndexCollection Indices
        {
            get
            {
                return ((global::PvKatalogsystem.IndexCreation.Configuration.IndexCollection)(base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.IndicesPropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.IndicesPropertyName] = value;
            }
        }
        #endregion
        
        #region Database Property
        /// <summary>
        /// The XML name of the <see cref="Database"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string DatabasePropertyName = "database";
        
        /// <summary>
        /// Gets or sets the Database.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Database.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.DatabasePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::PvKatalogsystem.IndexCreation.Configuration.DatabaseConfig Database
        {
            get
            {
                return ((global::PvKatalogsystem.IndexCreation.Configuration.DatabaseConfig)(base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.DatabasePropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCreationConfig.DatabasePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace PvKatalogsystem.IndexCreation.Configuration
{
    
    
    /// <summary>
    /// The MasterServerConfig Configuration Element.
    /// </summary>
    public partial class MasterServerConfig : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Uri Property
        /// <summary>
        /// The XML name of the <see cref="Uri"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string UriPropertyName = "uri";
        
        /// <summary>
        /// Gets or sets the Uri.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Uri.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.MasterServerConfig.UriPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Uri
        {
            get
            {
                return ((string)(base[global::PvKatalogsystem.IndexCreation.Configuration.MasterServerConfig.UriPropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.MasterServerConfig.UriPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace PvKatalogsystem.IndexCreation.Configuration
{
    
    
    /// <summary>
    /// A collection of ReplicationServerConfig instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerCollection.ReplicationServerConfigPropertyName)]
    public partial class ReplicationServerCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ReplicationServerConfigPropertyName = "server";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerCollection.ReplicationServerConfigPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerCollection.ReplicationServerConfigPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig();
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig GetItemAt(int index)
        {
            return ((global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig GetItemByKey(string name)
        {
            return ((global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace PvKatalogsystem.IndexCreation.Configuration
{
    
    
    /// <summary>
    /// The ReplicationServerConfig Configuration Element.
    /// </summary>
    public partial class ReplicationServerConfig : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string Name
        {
            get
            {
                return ((string)(base[global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig.NamePropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Uri Property
        /// <summary>
        /// The XML name of the <see cref="Uri"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string UriPropertyName = "uri";
        
        /// <summary>
        /// Gets or sets the Uri.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Uri.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig.UriPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Uri
        {
            get
            {
                return ((string)(base[global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig.UriPropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.ReplicationServerConfig.UriPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace PvKatalogsystem.IndexCreation.Configuration
{
    
    
    /// <summary>
    /// The IndexConfig Configuration Element.
    /// </summary>
    public partial class IndexConfig : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region RelativeUri Property
        /// <summary>
        /// The XML name of the <see cref="RelativeUri"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string RelativeUriPropertyName = "relativeUri";
        
        /// <summary>
        /// Gets or sets the RelativeUri.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The RelativeUri.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.RelativeUriPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string RelativeUri
        {
            get
            {
                return ((string)(base[global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.RelativeUriPropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.RelativeUriPropertyName] = value;
            }
        }
        #endregion
        
        #region ManagementTable Property
        /// <summary>
        /// The XML name of the <see cref="ManagementTable"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ManagementTablePropertyName = "managementTable";
        
        /// <summary>
        /// Gets or sets the ManagementTable.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ManagementTable.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.ManagementTablePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string ManagementTable
        {
            get
            {
                return ((string)(base[global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.ManagementTablePropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.ManagementTablePropertyName] = value;
            }
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string Name
        {
            get
            {
                return ((string)(base[global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.NamePropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region ChunkSize Property
        /// <summary>
        /// The XML name of the <see cref="ChunkSize"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ChunkSizePropertyName = "chunkSize";
        
        /// <summary>
        /// Gets or sets the ChunkSize.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ChunkSize.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.ChunkSizePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=10000)]
        public int ChunkSize
        {
            get
            {
                return ((int)(base[global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.ChunkSizePropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.ChunkSizePropertyName] = value;
            }
        }
        #endregion
        
        #region Replication Property
        /// <summary>
        /// The XML name of the <see cref="Replication"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ReplicationPropertyName = "replication";
        
        /// <summary>
        /// Gets or sets the Replication.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Replication.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.ReplicationPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public bool Replication
        {
            get
            {
                return ((bool)(base[global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.ReplicationPropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig.ReplicationPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace PvKatalogsystem.IndexCreation.Configuration
{
    
    
    /// <summary>
    /// A collection of IndexConfig instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::PvKatalogsystem.IndexCreation.Configuration.IndexCollection.IndexConfigPropertyName)]
    public partial class IndexCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string IndexConfigPropertyName = "index";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::PvKatalogsystem.IndexCreation.Configuration.IndexCollection.IndexConfigPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::PvKatalogsystem.IndexCreation.Configuration.IndexCollection.IndexConfigPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig();
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig GetItemAt(int index)
        {
            return ((global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig GetItemByKey(string name)
        {
            return ((global::PvKatalogsystem.IndexCreation.Configuration.IndexConfig)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Threads Property
        /// <summary>
        /// The XML name of the <see cref="Threads"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ThreadsPropertyName = "threads";
        
        /// <summary>
        /// Gets or sets the Threads.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Threads.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.IndexCollection.ThreadsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=2)]
        public int Threads
        {
            get
            {
                return ((int)(base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCollection.ThreadsPropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCollection.ThreadsPropertyName] = value;
            }
        }
        #endregion
        
        #region Namespace Property
        /// <summary>
        /// The XML name of the <see cref="Namespace"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string NamespacePropertyName = "namespace";
        
        /// <summary>
        /// Gets or sets the Namespace.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Namespace.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.IndexCollection.NamespacePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Namespace
        {
            get
            {
                return ((string)(base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCollection.NamespacePropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.IndexCollection.NamespacePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace PvKatalogsystem.IndexCreation.Configuration
{
    
    
    /// <summary>
    /// The DatabaseConfig Configuration Element.
    /// </summary>
    public partial class DatabaseConfig : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region SourceConnectionString Property
        /// <summary>
        /// The XML name of the <see cref="SourceConnectionString"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string SourceConnectionStringPropertyName = "sourceConnectionString";
        
        /// <summary>
        /// Gets or sets the SourceConnectionString.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The SourceConnectionString.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.DatabaseConfig.SourceConnectionStringPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string SourceConnectionString
        {
            get
            {
                return ((string)(base[global::PvKatalogsystem.IndexCreation.Configuration.DatabaseConfig.SourceConnectionStringPropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.DatabaseConfig.SourceConnectionStringPropertyName] = value;
            }
        }
        #endregion
        
        #region ManagementConnectionString Property
        /// <summary>
        /// The XML name of the <see cref="ManagementConnectionString"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ManagementConnectionStringPropertyName = "managementConnectionString";
        
        /// <summary>
        /// Gets or sets the ManagementConnectionString.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ManagementConnectionString.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PvKatalogsystem.IndexCreation.Configuration.DatabaseConfig.ManagementConnectionStringPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string ManagementConnectionString
        {
            get
            {
                return ((string)(base[global::PvKatalogsystem.IndexCreation.Configuration.DatabaseConfig.ManagementConnectionStringPropertyName]));
            }
            set
            {
                base[global::PvKatalogsystem.IndexCreation.Configuration.DatabaseConfig.ManagementConnectionStringPropertyName] = value;
            }
        }
        #endregion
    }
}
